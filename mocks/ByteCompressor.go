// Code generated by mockery v2.2.1. DO NOT EDIT.

package mocks

import (
	bufio "bufio"

	mock "github.com/stretchr/testify/mock"
)

// ByteCompressor is an autogenerated mock type for the ByteCompressor type
type ByteCompressor struct {
	mock.Mock
}

// BufferFromBase64 provides a mock function with given fields: stringBase64
func (_m *ByteCompressor) BufferFromBase64(stringBase64 string) (*bufio.Reader, error) {
	ret := _m.Called(stringBase64)

	var r0 *bufio.Reader
	if rf, ok := ret.Get(0).(func(string) *bufio.Reader); ok {
		r0 = rf(stringBase64)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*bufio.Reader)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(stringBase64)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ToBase64 provides a mock function with given fields: byteArray
func (_m *ByteCompressor) ToBase64(byteArray []byte) (string, error) {
	ret := _m.Called(byteArray)

	var r0 string
	if rf, ok := ret.Get(0).(func([]byte) string); ok {
		r0 = rf(byteArray)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]byte) error); ok {
		r1 = rf(byteArray)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
